<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="realtorMapper">
    <resultMap id="realtorDetail" type="com.green.hanbang.realtor.vo.RealtorDetailVO">
        <id column="REALTOR_CODE" property="realtorCode"/>
        <result column="USER_NO" property="userNo"/>
        <result column="OFFICE_NAME" property="officeName"/>
        <result column="IDENTIFICATION_NUM" property="identificationNum"/>
        <result column="LICENSE_FILE_NAME" property="licenseFileName"/>
        <result column="AUTHORITY" property="authority"/>
        <result column="REQUEST_DATE" property="requestDate"/>
        <result column="REALTOR_NAME" property="realtorName"/>
        <association property="licenseImgVO" resultMap="licenseImg"/>
        <collection property="inquiryList" resultMap="roomMapper.inquiry"/>
    </resultMap>

    <resultMap id="licenseImg" type="com.green.hanbang.realtor.vo.LicenseImgVO">
        <id column="LICENSE_CODE" property="licenseCode"/>
        <result column="ORIGIN_LICENSE_FILE_NAME" property="originLicenseFileName"/>
        <result column="ATTACHED_LICENSE_FILE_NAME" property="attachedLicenseFileName"/>
        <result column="REALTOR_CODE" property="realtorCode"/>
    </resultMap>

    <!-- 공인중개사 마이페이지 정보 조회 -->
    <select id="selectRealtorMyPage" resultMap="memberMapper.member">
        SELECT USER_NAME
            , NICK_NAME
            , PHONE
            , USER_NO
        FROM MEMBER_USER
        WHERE MEMBER_USER.USER_NO = #{userNo}
    </select>

    <!-- 다음에 들어가야할 REALTOR_CODE 조회 -->
    <select id="selectNextRealtorCode" resultType="String">
        SELECT 'RT_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(REALTOR_CODE,4))),0) + 1 ,3,'0') REALTOR_CODE
        FROM REALTOR_DETAIL
    </select>

    <insert id="insertRealtorDetail">
        INSERT INTO REALTOR_DETAIL (
            REALTOR_CODE
            , USER_NO
            , OFFICE_NAME
            , IDENTIFICATION_NUM
            , LICENSE_FILE_NAME
            , REALTOR_NAME
        ) VALUES (
            #{realtorCode}
            , #{userNo}
            , #{officeName}
            , #{identificationNum}
            , #{licenseFileName}
            , #{realtorName}
        )
    </insert>

    <!-- 사업자등록증 파일 등록 -->
    <insert id="insertLicenseImg">
        INSERT INTO LICENSE_IMG (
            LICENSE_CODE
            , ORIGIN_LICENSE_FILE_NAME
            , ATTACHED_LICENSE_FILE_NAME
            , REALTOR_CODE
        ) VALUES (
            (SELECT 'LC_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(LICENSE_CODE,4))),0) + 1 ,3,'0') LICENSE_CODE
            FROM LICENSE_IMG)
            , #{licenseImgVO.originLicenseFileName}
            , #{licenseImgVO.attachedLicenseFileName}
            , #{realtorCode}
        )
    </insert>

    <!-- 공인중개사 상세페이지 인증 버튼 ON/OFF -->
    <select id="selectAuthorityStatue" resultType="String">
        SELECT AUTHORITY
        FROM REALTOR_DETAIL
        WHERE USER_NO = #{userNo}
    </select>

    <!-- 사업자등록번호 중복 여부 -->
    <select id="selectIdentificationNum" resultType="String">
        SELECT IDENTIFICATION_NUM
        FROM REALTOR_DETAIL
        WHERE IDENTIFICATION_NUM = #{identificationNum}
    </select>

    <!-- 공인중개사 정보 수정 시 비밀번호 확인 -->
    <select id="selectRealtorPw" resultType="String">
        SELECT PASSWORD
        FROM MEMBER_USER
        WHERE USER_NO = #{userNo}
    </select>

    <!-- 공인중개사 detail정보 입력 여부 -->
    <select id="selectRealtorDetailInfo" resultType="String">
        SELECT REALTOR_CODE
        FROM REALTOR_DETAIL
        WHERE USER_NO = #{userNo}
    </select>

    <!-- 공인중개사 정보 수정 -->
    <update id="updateRealtorInfo">
        UPDATE MEMBER_USER
        SET NICK_NAME = #{nickName}
            , PHONE = #{phone}
        WHERE USER_NO = #{userNo}
    </update>

    <!-- 공인중개사 문의글 조회 -->
    <select id="selectInquiryBoard" resultMap="roomMapper.inquiry">
        SELECT INQUIRY_CODE
            , FROM_USER_NO
            , ROOM_CODE
            , INQUIRY_TITLE_CODE
            , INQUIRY_CONTENT
            , INQUIRY_TITLES
            , INQUIRY_ANSWER
            , INQUIRY_DATE
        FROM (
            SELECT INQUIRY_CODE
            , FROM_USER_NO
            , ROOM_CODE
            , I.INQUIRY_TITLE_CODE
            , INQUIRY_CONTENT
            , INQUIRY_TITLES
            , INQUIRY_ANSWER
            , TO_CHAR(INQUIRY_DATE, 'YYYY-MM-DD') INQUIRY_DATE
            FROM INQUIRY I, INQUIRY_TITLE T
            WHERE TO_USER_NO = #{toUserNo}
            AND I.INQUIRY_TITLE_CODE = T.INQUIRY_TITLE_CODE
            AND I.INQUIRY_ANSWER IS NULL
            ORDER BY INQUIRY_DATE
        )
        UNION ALL
        SELECT INQUIRY_CODE
        , FROM_USER_NO
        , ROOM_CODE
        , INQUIRY_TITLE_CODE
        , INQUIRY_CONTENT
        , INQUIRY_TITLES
        , INQUIRY_ANSWER
        , INQUIRY_DATE
        FROM (
            SELECT INQUIRY_CODE
            , FROM_USER_NO
            , ROOM_CODE
            , I.INQUIRY_TITLE_CODE
            , INQUIRY_CONTENT
            , INQUIRY_TITLES
            , INQUIRY_ANSWER
            , TO_CHAR(INQUIRY_DATE, 'YYYY-MM-DD') INQUIRY_DATE
            FROM INQUIRY I, INQUIRY_TITLE T
            WHERE TO_USER_NO = #{toUserNo}
            AND I.INQUIRY_TITLE_CODE = T.INQUIRY_TITLE_CODE
            AND I.INQUIRY_ANSWER IS NOT NULL
            ORDER BY INQUIRY_DATE DESC
        )
    </select>

    <!-- 문의글 상세 조회 -->
    <select id="selectInquiryDetail" resultMap="roomMapper.inquiry">
        SELECT INQUIRY_CODE
        , FROM_USER_NO
        , ROOM_CODE
        , I.INQUIRY_TITLE_CODE
        , INQUIRY_CONTENT
        , INQUIRY_ANSWER
        , INQUIRY_TITLES
        , TO_CHAR(INQUIRY_DATE, 'YYYY-MM-DD') INQUIRY_DATE
        FROM INQUIRY I, INQUIRY_TITLE T
        WHERE INQUIRY_CODE = #{inquiryCode}
        AND I.INQUIRY_TITLE_CODE = T.INQUIRY_TITLE_CODE
    </select>

    <!-- 문의글 답변 작성 -->
    <update id="updateInquiryAnswer">
        UPDATE INQUIRY
        SET INQUIRY_ANSWER = #{inquiryAnswer}
        WHERE INQUIRY_CODE = #{inquiryCode}
    </update>

</mapper>































