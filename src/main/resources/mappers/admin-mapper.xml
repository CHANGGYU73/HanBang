<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="adminMapper">
    <resultMap id="manager" type="com.green.hanbang.admin.vo.MemberManageVO">
        <id column="USER_NO"                 property="userNo"/>
        <result column="USER_NAME"           property="userName"/>
        <result column="PASSWORD"            property="password"/>
        <result column="LOGIN_TYPE"          property="loginType"/>
        <result column="NICK_NAME"           property="nickName"/>
        <result column="PHONE"               property="phone"/>
        <result column="JOIN_DATE"           property="joinDate"/>
        <result column="REALTOR_CODE"        property="realTorCode"/>
        <result column="OFFICE_NAME"         property="officeName"/>
        <result column="IDENTIFICATION_NUM"  property="identificationNum"/>
        <result column="LICENSE_FILE_NAME"   property="licenseFileName"/>
        <result column="AUTHORITY"           property="authority"/>
    </resultMap>
    
    <resultMap id="board" type="com.green.hanbang.admin.vo.BoardVO">
        <result column="BOARD_NUM"      property="boardNum"/>
        <result column="INFO_TITLE"     property="infoTitle"/>
        <result column="INFO_CONTENT"   property="infoContent"/>
        <result column="INFO_REGDATE"   property="infoRegDate"/>
    </resultMap>

    <resultMap id="memCate" type="com.green.hanbang.admin.vo.MemCateVO">
        <result column="MEM_CATE_CODE"          property="memCateCode"/>
        <result column="MEM_CATE_NAME"          property="memCateName"/>
        <collection property="membershipList" resultMap="membership"/>
    </resultMap>

    <resultMap id="membership" type="com.green.hanbang.admin.vo.MembershipVO">
        <result column="MEM_CATE_CODE"      property="memCateCode"/>
        <result column="MEM_CATE_NAME"      property="memCateName"/>
        <result column="MEMBERSHIP_CODE"    property="membershipCode"/>
        <result column="MEMBERSHIP_NAME"    property="membershipName"/>
        <collection property="memItemList" resultMap="memItem"/>
    </resultMap>

    <resultMap id="memItem" type="com.green.hanbang.admin.vo.MemItemVO">
        <result column="MEM_CATE_CODE"      property="memCateCode"/>
        <result column="MEMBERSHIP_CODE"    property="membershipCode"/>
        <result column="ITEM_CODE"          property="itemCode"/>
        <result column="ITEM_NAME"          property="itemName"/>
        <result column="ITEM_PRICE"         property="itemPrice"/>
        <result column="ITEM_CONTENT"       property="itemContent"/>
        <result column="ITEM_INTRO"         property="itemIntro"/>
    </resultMap>

    <resultMap id="event" type="com.green.hanbang.admin.vo.EventVO">
        <id column="EVENT_CODE"             property="eventCode"/>
        <result column="EVENT_TITLE"        property="eventTitle"/>
        <result column="EVENT_CONTENT"      property="eventContent"/>
        <result column="EVENT_REGDATE"      property="eventRegDate"/>
        <result column="EVENT_READ_CNT"     property="eventReadCnt"/>
        <collection property="eventImgList" resultMap="eventImg"/>
    </resultMap>

    <resultMap id="eventImg" type="com.green.hanbang.admin.vo.EventImgVO">
        <id column="EVENT_IMG_CODE"                 property="eventImgCode"/>
        <result column="EVENT_ORIGIN_FILE_NAME"     property="eventOriginFileName"/>
        <result column="EVENT_ATTACHED_FILE_NAME"   property="eventAttachedFileName"/>
        <result column="EVENT_CODE"                 property="eventCode"/>
        <result column="IS_MAIN"            property="isMain"/>
    </resultMap>

<!--    일반 회원 조회 -->
    <select id="userManage" resultMap="manager">
        SELECT USER_NO
        , USER_NAME
        FROM MEMBER_USER
        WHERE LOGIN_TYPE = 'USER'
        <if test='userSearch != null and !userSearch.equals("")'>
            AND UPPER(USER_NAME) LIKE '%'||UPPER(#{userSearch})||'%'
        </if>
    </select>

<!--    일반 회원 상세 조회-->
    <select id="userDetail" resultMap="manager">
        SELECT MEM.USER_NO 
            , USER_NAME
            , PASSWORD
            , LOGIN_TYPE
            , NICK_NAME
            , PHONE
            , TO_CHAR(JOIN_DATE, 'YYYY-MM-DD') JOIN_DATE
        FROM MEMBER_USER MEM
        WHERE USER_NO = #{userNo}
    </select>

<!--  일반 회원 삭제 -->
    <delete id="deleteUser">
        DELETE MEMBER_USER
        WHERE USER_NO = #{userNo}
    </delete>

<!--    공인 중개사 조회 -->
    <select id="realManage" resultMap="manager">
        SELECT REALTOR_CODE
            , OFFICE_NAME
            , IDENTIFICATION_NUM
            , AUTHORITY
            , REAL.USER_NO
        FROM MEMBER_USER MEM, REALTOR_DETAIL REAL
        WHERE LOGIN_TYPE = 'REALTOR'
        AND REAL.USER_NO = MEM.USER_NO
        <if test='realSearch != null and !realSearch.equals("")'>
            AND UPPER(IDENTIFICATION_NUM) LIKE '%'||UPPER(#{realSearch})||'%'
        </if>
    </select>

<!-- 공인 중개사 상세 조회-->
    <select id="realDetail" resultMap="manager">
        SELECT REALTOR_CODE
            , OFFICE_NAME
            , IDENTIFICATION_NUM
            , LICENSE_FILE_NAME
            , AUTHORITY
            , USER_NO
            , TO_CHAR(REQUEST_DATE,'YYYY-MM-DD') REQUEST_DATE
        FROM REALTOR_DETAIL
        WHERE IDENTIFICATION_NUM = #{identificationNum}
    </select>

<!-- 공인 중개사 승인 -->
    <update id="updateAuthority">
        UPDATE REALTOR_DETAIL
        SET AUTHORITY = 'Y'
        WHERE EXISTS (SELECT AUTHORITY
                        FROM MEMBER_USER
                        WHERE LOGIN_TYPE = 'REALTOR'
                        AND REALTOR_CODE = #{realTorCode}
                      )

    </update>

<!-- 공인중개사 삭제   -->
    <delete id="deleteReal">
        DELETE REALTOR_DETAIL
        WHERE IDENTIFICATION_NUM = #{identificationNum}
    </delete>

    <!-- 허위매물 신고 조회 -->
    <select id="selectFalseOfferings" resultMap="roomMapper.falseOfferings">
        SELECT ROOM_CODE
            , MAX(REPORT_CNT) REPORT_CNT
            , TO_CHAR(MAX(REPORT_DATE),'YYYY-MM-DD') REPORT_DATE
        FROM FALSE_OFFERINGS
        GROUP BY ROOM_CODE
        HAVING MAX(REPORT_CNT) >= 4
        AND (SELECT INQUIRY_ST_CODE FROM FALSE_OFFERINGS WHERE REPORT_CNT
            = (SELECT MAX(REPORT_CNT) FROM FALSE_OFFERINGS) AND INQUIRY_ST_CODE = 'ST_01') = 'ST_01'
    </select>

    <!-- 허위매물 상세 조회 -->
    <select id="selectFalseOfferingsDetail" resultMap="roomMapper.falseOfferings">
        SELECT F.ROOM_CODE
            , REASON_CODE
            , REPORT_CONTENT
            , TO_CHAR(REPORT_DATE,'YYYY-MM-DD') REPORT_DATE
            , ADDR
            , DETAIL_ADDR
        FROM FALSE_OFFERINGS F, ROOM_ADDR R
        WHERE F.ROOM_CODE = #{roomCode}
        AND F.ROOM_CODE = R.ROOM_CODE
    </select>

    <!-- 허위 매물 상태 수정 -->
    <delete id="updateFalseOfferings">
        UPDATE FALSE_OFFERINGS
        SET INQUIRY_ST_CODE = 'ST_03'
        WHERE ROOM_CODE = #{roomCode}
    </delete>

    <!-- 허위 매물 이미지 조회 -->
    <select id="selectFalseOfferingsImgs" resultMap="roomMapper.roomImg">
        SELECT ATTACHED_FILE_NAME
        FROM ROOM_IMG
        WHERE ROOM_CODE = #{roomCode}
    </select>

    <!-- 허위 매물 이미지 삭제 -->
    <delete id="deleteFalseOfferingsImgs">
        DELETE ROOM_IMG
        WHERE ROOM_CODE = #{roomCode}
    </delete>

    <!-- 공인중개사 권한 승인 요청 -->
    <select id="selectRealtorAuthority" resultMap="realtorMapper.realtorDetail">
        SELECT REALTOR_CODE
        , AUTHORITY
        , REQUEST_DATE
        FROM REALTOR_DETAIL
        WHERE AUTHORITY = 'N'
    </select>

<!--//////////////////////////////// 공지사항 ////////////////////////////////////////-->

<!--   공지사항 조회하기-->
    <select id="selectBoard" resultMap="board">
        SELECT BOARD_NUM
            , INFO_TITLE
            , TO_CHAR(INFO_REGDATE, 'YYYY-MM-DD') INFO_REGDATE
        FROM INFO_BOARD
        ORDER BY INFO_REGDATE DESC
    </select>

<!-- 공지사항 등록하기 -->
    <insert id="insertBoard" >
        INSERT INTO INFO_BOARD(
            BOARD_NUM
            , INFO_TITLE
            , INFO_CONTENT
        )VALUES (
            (SELECT NVL(MAX(BOARD_NUM),0)+1 FROM INFO_BOARD)
            , #{infoTitle}
            ,#{infoContent}
        )
    </insert>

<!--   공지사항 상세 조회-->
    <select id="detailBoard" resultMap="board">
        SELECT BOARD_NUM
            , INFO_TITLE
            , INFO_CONTENT
            , TO_CHAR(INFO_REGDATE, 'YYYY-MM-DD') INFO_REGDATE
        FROM INFO_BOARD
        WHERE BOARD_NUM = #{boardNum}
    </select>

<!--   공지사항 수정-->
    <update id="updateBoard">
        UPDATE INFO_BOARD
        SET
            INFO_TITLE = #{infoTitle}
            , INFO_CONTENT= #{infoContent}
        WHERE BOARD_NUM= #{boardNum}
    </update>

<!--공지사항 삭제-->
    <delete id="deleteBoard">
        DELETE INFO_BOARD
        WHERE BOARD_NUM = #{boardNum}
    </delete>

    <!--//////////////////////////////// 맴버쉽 ////////////////////////////////////////-->


    <!--    맴버쉽 카테고리 출력 (대분류)-->
    <select id="selectCategory" resultMap="memCate">
        SELECT MEM_CATE_CODE
            , MEM_CATE_NAME
        FROM MEMBERSHIP_CATEGORY
    </select>

<!-- 맵버쉽 카테고리 출력 (중분류)-->
    <select id="selectMidCategory" resultMap="membership">
        SELECT MEMBERSHIP_NAME
            , MEMBERSHIP_CODE
            , MEM_CATE_CODE
        FROM MEMBERSHIP_TABLE
        WHERE MEM_CATE_CODE = #{memCateCode}
    </select>

<!-- 맴버쉽 상품의 세부 상품 조회 (중분류 && 아이템) -->
    <select id="selectMembershipItemList" resultMap="membership">
        SELECT ITEM.ITEM_NAME
            , ITEM.ITEM_PRICE
            , ITEM.MEM_CATE_CODE
            , CATE.MEM_CATE_NAME
            , ITEM.MEMBERSHIP_CODE
            , SHIP.MEMBERSHIP_NAME
            , ITEM_INTRO
            , ITEM_CONTENT
            , ITEM.ITEM_CODE
        FROM MEMITEM_TABLE ITEM, MEMBERSHIP_CATEGORY CATE, MEMBERSHIP_TABLE SHIP
        WHERE ITEM.MEM_CATE_CODE = CATE.MEM_CATE_CODE
        AND SHIP.MEMBERSHIP_CODE(+) = ITEM.MEMBERSHIP_CODE
        AND ITEM.MEM_CATE_CODE = #{memCateCode}

    </select>

<!--    맴버쉽 아이템 등록하기 (1) : 대분류 등록-->
    <insert id="insertCategory">
        INSERT INTO MEMBERSHIP_CATEGORY(
            MEM_CATE_CODE
            , MEM_CATE_NAME
        ) VALUES (
            #{memCateCode}
            , #{memCateName}
        )
    </insert>

    <!--    맴버쉽 아이템 등록하기 (2) : 중분류 등록-->
    <insert id="insertMidCategory">
        INSERT INTO MEMBERSHIP_TABLE(
            MEMBERSHIP_CODE
            , MEMBERSHIP_NAME
            , MEM_CATE_CODE
        ) VALUES (
            #{membershipCode}
            , #{memCateName}
            , #{memCateCode}
        )
    </insert>

<!--    코드 생성하기 -->
    <select id="selectNextCateCode" resultType="String">
        SELECT 'CATE_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(MEM_CATE_CODE, 6))), 0) + 1, 3, '0')
        FROM MEMBERSHIP_CATEGORY
    </select>
    <select id="selectNextMembershipCode" resultType="String">
        SELECT 'MEMBERSHIP_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(MEMBERSHIP_CODE, 12))), 0) + 1, 3, '0')
        FROM MEMBERSHIP_TABLE
    </select>
    <select id="selectNextItemCode" resultType="String">
        SELECT 'ITEM_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(ITEM_CODE, 6))), 0) + 1, 3, '0')
        FROM MEMITEM_TABLE
    </select>

    <!--맴버쉽 등록 화면에서 상단의 카테고리 클릭 시 해당 카테고리에 포함된 상품을 조회하는 쿼리-->
    <select id="selectItemListByCate" resultMap="memItem">
        SELECT ITEM_CODE
            , ITEM_NAME
        FROM MEMITEM_TABLE
        WHERE MEM_CATE_CODE = #{memCateCode}
    </select>

    <!--맴버쉽 등록 화면에서 대분류 또는 중분류 클릭 시 해당 카테고리에 포함된 상품을 조회 -->
    <select id="selectItemListByMidCate" resultMap="memItem">
        SELECT ITEM_NAME
            , ITEM_CODE
        FROM MEMITEM_TABLE
        WHERE MEM_CATE_CODE = #{memCateCode}
        AND MEMBERSHIP_CODE = #{membershipCode}
    </select>

    <!-- 맴버쉽 등록 화면에서 아이템 선택 시 아이템의 세부 정보 조회   -->
    <select id="selectItemDetail" resultMap="memItem">
        SELECT ITEM_NAME
            , ITEM_PRICE
            , ITEM_INTRO
            , ITEM_CONTENT
            , ITEM_CODE
        FROM MEMITEM_TABLE
        WHERE ITEM_CODE = #{itemCode}
    </select>

<!--   아이템 정보 수정하기 -->
    <update id="updateItemInfo">
        UPDATE MEMITEM_TABLE
        SET ITEM_NAME = #{itemName}
            , ITEM_PRICE = #{itemPrice}
            , ITEM_INTRO = #{itemIntro}
            , ITEM_CONTENT = #{itemContent}
        WHERE ITEM_CODE = #{itemCode}
    </update>

    <!--    맴버쉽 아이템 등록하기 (3) : 소분류 등록-->
    <insert id="insertItem">
        INSERT INTO MEMITEM_TABLE(
            ITEM_CODE
            , ITEM_NAME
            , ITEM_CONTENT
            , ITEM_INTRO
            , ITEM_PRICE
            , MEM_CATE_CODE
            , MEMBERSHIP_CODE
        ) VALUES (
            #{itemCode}
            , #{itemName}
            , #{itemContent}
            , #{itemIntro}
            , #{itemPrice}
            , #{memCateCode}
            , #{membershipCode}
        )
    </insert>


    <!--//////////////////////////////// 이벤트 ////////////////////////////////////////-->

    <!-- EVENT_CODE 자동 생성 쿼리-->
    <select id="selectNextEventCode" resultType="String">
        SELECT 'EVENT_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(EVENT_CODE, 7))), 0) + 1, 3, '0')
        FROM EVENT_BOARD
    </select>

    <!-- 새로운 EVENT 등록 쿼리 -->
    <insert id="insertEvent">
        INSERT INTO EVENT_BOARD(
            EVENT_CODE
            ,EVENT_TITLE
            ,EVENT_CONTENT
        ) VALUES(
            #{eventCode}
            , #{eventTitle}
            , #{eventContent}
        )
    </insert>

    <!-- 이미지 첨부 쿼리-->
    <insert id="insertEventImg">
        INSERT INTO EVENT_IMG(
            EVENT_IMG_CODE
            , EVENT_ORIGIN_FILE_NAME
            , EVENT_ATTACHED_FILE_NAME
            , EVENT_CODE
            , IS_MAIN
        )
        <foreach collection="eventImgList" item="eventImg" separator="UNION ALL" index="idx">
                SELECT (SELECT 'IMG_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(EVENT_IMG_CODE,5))),0) +1 +#{idx}, 3,'0')
                        FROM EVENT_IMG)
                , #{eventImg.eventOriginFileName}
                , #{eventImg.eventAttachedFileName}
                , #{eventImg.eventCode}
                , #{eventImg.isMain}
            FROM DUAL
        </foreach>
    </insert>


    <!--  이벤트 상품 조회  -->
    <select id="selectEventList" resultMap="event">
        SELECT EVENT.EVENT_CODE
                , EVENT_TITLE
                , TO_CHAR(EVENT_REGDATE, 'YYYY-MM-DD') EVENT_REGDATE
                , EVENT_READ_CNT
                , EVENT_ATTACHED_FILE_NAME
                , IMG.IS_MAIN
        FROM EVENT_BOARD EVENT, EVENT_IMG IMG
        WHERE EVENT.EVENT_CODE = IMG.EVENT_CODE
        AND IS_MAIN = 'Y'
        ORDER BY EVENT_CODE DESC
    </select>

    <!-- 이벤트 상품 상세 조회 -->
    <select id="selectEventDetail" resultMap="event">
        SELECT EVENT.EVENT_CODE
            , EVENT_TITLE
            , TO_CHAR(EVENT_REGDATE, 'YYYY-MM-DD') EVENT_REGDATE
            , EVENT_READ_CNT
            , EVENT_CONTENT
            , EVENT_ATTACHED_FILE_NAME
            , IS_MAIN
        FROM EVENT_BOARD EVENT, EVENT_IMG IMG
        WHERE EVENT.EVENT_CODE = IMG.EVENT_CODE
        AND EVENT.EVENT_CODE = #{eventCode}
    </select>

    <!-- 조회수 증가 -->
    <update id="updateReadCnt">
        UPDATE EVENT_BOARD
        SET
        EVENT_READ_CNT = EVENT_READ_CNT+1
        WHERE EVENT_CODE = #{EVENT_CODE}
    </update>

    <!-- 이벤트 삭제 -->
    <delete id="deleteEvent">
        DELETE EVENT_BOARD
        WHERE EVENT_CODE = #{eventCode}
    </delete>

    <!-- 이벤트 수정 -->
    <update id="updateEventInfo">
        UPDATE EVENT_BOARD
        SET
            EVENT_TITLE = #{eventTitle}
            , EVENT_CONTENT = #{eventContent}
        WHERE EVENT_CODE = #{eventCode}
    </update>

    <!-- 저장된 이미지 조회 -->
    <select id="selectImgList" resultMap="event">
        SELECT EVENT_IMG_CODE
            , EVENT.EVENT_CODE
            , EVENT_ORIGIN_FILE_NAME
            , EVENT_ATTACHED_FILE_NAME
        FROM EVENT_IMG IMG, EVENT_BOARD EVENT
        WHERE IMG.EVENT_CODE = EVENT.EVENT_CODE
        AND IMG.EVENT_CODE =#{eventCode}
    </select>

    <!-- 정보 수정 시 이벤트 이미지 정보 삭제   -->
    <delete id="deleteImgInfo">
        DELETE EVENT_IMG
        WHERE EVENT_CODE = #{eventCode}
    </delete>



</mapper>































